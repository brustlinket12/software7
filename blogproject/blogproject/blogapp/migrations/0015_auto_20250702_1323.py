# Generated by Django 5.1.3 on 2025-07-02 18:23

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ("blogapp", "0014_alter_blog_tag"),
    ]

    operations = []

from django.db import migrations 

from blogapp.models.listatags import PREDEFINED_MUSIC_TAG_TITLES


#
# Función para crear los tags
def create_music_tags(apps, schema_editor):
    Tag = apps.get_model('blogapp', 'Tag') 
    print("\n--- Iniciando la creación de tags de música predefinidos ---")
    for tag_title in PREDEFINED_MUSIC_TAG_TITLES:
        tag, created = Tag.objects.get_or_create(title=tag_title)
        if created:
            print(f"  ✅ Creado: {tag.title}")
        else:
            print(f"  ℹ️ Ya existe: {tag.title}")
    print("--- Finalizada la creación de tags de música predefinidos ---\n")

def remove_music_tags(apps, schema_editor):
    Tag = apps.get_model('blogapp', 'Tag')
    print("\n--- Iniciando la eliminación de tags de música predefinidos para reversión ---")
    for tag_title in PREDEFINED_MUSIC_TAG_TITLES:
        deleted_count, _ = Tag.objects.filter(title=tag_title).delete()
        if deleted_count > 0:
            print(f"  ❌ Eliminado: {tag_title}")
        else:
            print(f"  ⚠️ No encontrado para eliminar: {tag_title}")
    print("--- Finalizada la eliminación de tags de música predefinidos ---\n")


class Migration(migrations.Migration):
    dependencies = [ 
       
        ("blogapp", "0014_alter_blog_tag"),
    ]

    operations = [ # <--- ESTO LO DEJA DJANGO
        # ¡ESTA ES LA LÍNEA CRÍTICA QUE DEBES AÑADIR/REEMPLAZAR EN operations!
        # Ejecuta la función 'create_music_tags' para crear los datos
        # y 'remove_music_tags' si se revierte la migración
        migrations.RunPython(create_music_tags, remove_music_tags),
    ]